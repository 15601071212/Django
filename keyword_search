<form action="{% url 'keyword_search' %}" method="POST"> 
{% csrf_token %} 

<div class="search-box">
<input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
<div id="results" style="display: none;"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function(){
    $('#search').on('input', function(e){
        $.get('/search/', {q: $(this).val()}, function(data){
            $('#results').empty();
            if (data.length > 0) {
                $('#results').show();
                $.each(data, function(i, item){
                    $('#results').append('<div>' + item.name + '</div>');
                });
            } else {
                $('#results').hide();
            }
        });
    });
});
</script>

urls.py

from django.urls import re_path as url

from . import views
from .views import SearchView

from django.urls import path

urlpatterns =[
     url('keyword_search', views.keyword_search, name='keyword_search'),
     url('detail', views.detail_view, name='detail'),
     url('search/', SearchView.as_view(), name='search')
        ]
<button type="submit"  class="search-button">查询</button> 
</div>
</form>

views.py

from django.shortcuts import render,get_object_or_404
import re
import time
from srm.models import KeywordPost
from srm.models import KeywordList
from srm.models import ScriptPost

from django.http import JsonResponse
from django.views import View
from django.core import serializers
from django.db.models import Q

class SearchView(View):
    def get(self, request):
        query = request.GET.get('q', None)
        if query:
            results = KeywordList.objects.filter(kyeword_name__icontains=query)
            data = serializers.serialize('json', results)
            return JsonResponse(data, safe=False)
        return JsonResponse({}, status=400)


<!DOCTYPE html>
<html>
<head>
    <title>搜索框自动提示</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>搜索框自动提示</h1>
    <input type="text" id="search-box" placeholder="输入查询关键字">
    <div id="suggestions-container"></div>
</body>
</html>

<script>
$(document).ready(function() {
    $("#search-box").on("input", function() {
        var keyword = $(this).val();

        // 使用Ajax发送关键字到后端，并获取匹配的提示信息
        $.ajax({
            url: "/api/search/",  // 这里是后端Django开发的API地址
            method: "GET",
            data: {
                "keyword": keyword
            },
            success: function(response) {
                // 清空之前的提示信息
                $("#suggestions-container").empty();

                // 显示后端返回的提示信息
                for (var i = 0; i < response.length; i++) {
                    $("#suggestions-container").append("<div>" + response[i] + "</div>");
                }
            },
            error: function(error) {
                console.log("请求错误: " + error);
            }
        });
    });
});
</script>

from django.http import JsonResponse

def search_view(request):
    if request.method == 'GET':
        keyword = request.GET.get('keyword', '')
        # 在这里根据关键字查询数据库，并获取匹配的内容
        # 假设你已经获取了匹配的内容，存放在matches列表中
        matches = ["结果1", "结果2", "结果3"]
        return JsonResponse(matches, safe=False)

<html>
<head>
{% csrf_token %} 
<title>搜索框自动提示</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
<br>
<br>
<form action="{% url 'keyword_search' %}" method="POST"> 
{% csrf_token %} 

<div class="search-box">
<input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
<div id="suggestions-container"></div>

<script>
    $(document).ready(function() {
        $("#search-box").on("input", function() {
            var keyword = $(this).val();
    
            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container").empty();
    
                    // 显示后端返回的提示信息
                    for (var i = 0; i < response.length; i++) {
                        $("#suggestions-container").append("<div>" + response[i] + "</div>");
                    }
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                }
            });
        });
    });
    </script>
<button type="submit"  class="search-button">查询</button> 
</div>
</form>
</html>

urlpatterns =[
     url('/search/', views.search_view, name='search')
     url('keyword_search', views.keyword_search, name='keyword_search'),
     url('detail', views.detail_view, name='detail'),
        ]


<!-- 修改HTML部分 -->
<form>
    <div class="search-box">
        <input type="text" id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input">
    </div>
</form>
<!-- 使用<select>元素来创建下拉列表 -->
<div>
    <select id="suggestions-container" style="display: none;">
    </select>
</div>

<!-- 修改JavaScript部分 -->
<script>
    $(document).ready(function () {
        $("#search").on("input", function () {
            var keyword = $(this).val();

            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",
                method: "GET",
                data: {
                    "q": keyword
                },
                success: function (response) {
                    // 清空之前的下拉列表内容
                    $("#suggestions-container").empty();

                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                    for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function (error) {
                    console.log("请求错误: " + error);
                }
            });
        });
    });
</script>


<!-- 修改HTML部分 -->
<form>
    <div class="search-box">
        <input type="text" id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input">
    </div>
</form>
<!-- 使用<select>元素来创建下拉列表 -->
<div>
    <select id="suggestions-container" style="display: none;">
    </select>
</div>

<!-- 修改JavaScript部分 -->
<script>
    $(document).ready(function () {
        $("#search").on("input", function () {
            var keyword = $(this).val();

            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",
                method: "GET",
                data: {
                    "q": keyword
                },
                success: function (response) {
                    // 清空之前的下拉列表内容
                    $("#suggestions-container").empty();

                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                    for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function (error) {
                    console.log("请求错误: " + error);
                }
            });
        });

        // 监听下拉列表的change事件
        $("#suggestions-container").on("change", function () {
            // 获取用户选择的值
            var selectedValue = $(this).val();

            // 将选择的值填充到搜索框中
            $("#search").val(selectedValue);

            // 隐藏下拉列表
            $("#suggestions-container").hide();
        });
    });
</script>


<html>
<head>
{% csrf_token %} 
<title>搜索框自动提示</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
<br>
<br>
<form action="{% url 'keyword_search' %}" method="POST"> 
{% csrf_token %} 

<div class="search-box">
<input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
<div>
<select id="suggestions-container" style="display: none;">
</select>
</div>

<!-- <script>
    $(document).ready(function() {
        $("#search").on("input", function() {
            var keyword = $(this).val();
    
            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container").empty();
    
                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                        for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                }
            });
        });
    });
    </script> -->
    <script>
        $(document).ready(function() {
        $("#search").on("input", function() {
            var keyword = $(this).val();
    
            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container").empty();
    
                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                        for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                    }
                });
            });
    
            // 监听下拉列表的change事件
            $("#suggestions-container").on("change", function () {
                // 获取用户选择的值
                var selectedValue = $(this).val();
    
                // 将选择的值填充到搜索框中
                $("#search").val(selectedValue);
    
                // 隐藏下拉列表
                $("#suggestions-container").hide();
            });
        });
    </script>
<button type="submit"  class="search-button">查询</button> 
</div>

<br>
<div class="checkbox-container">
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
</div>
<br>
<div class="select-container">
<label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
<select id="type" name="keyword_type" class="select-large-text"> 
<option value="配置" selected>配置类</option> 
<option value="检查">检查类</option> 
<option value="获取">获取类</option> 
<option value="测试仪">测试仪类</option> 
<option value="all">所有类型</option> 
</select>
</div>
<p class="normal-text">
<div class="radio-container">
<label for="yes">（选择是否查询示例库）是：</label> 
<input type="radio" id="yes" name="choice" value="yes"> 
<label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
<input type="radio" id="no" name="choice" value="no" checked>
</div>
</p>
<div class="select-container">
<label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
<select id="number" name="output_number" class="select-large-text"> 
<option value="3" selected>3</option> 
<option value="5">5</option> 
<option value="7">7</option> 
<option value="17">9</option> 
<option value="all">返回所有示例</option>
</select>
</div>
<p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>

</form> 

</html>

<div class="checkbox-container">
  <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="中台关键字库" class="db-name-checkbox" checked>
    <label class="checkbox-label">中台关键字库(5168)</label>
  </div>
  <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="9K关键字库" class="db-name-checkbox">
    <label class="checkbox-label">9K关键字库(1261)</label>
  </div>
  <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="C89E关键字库" class="db-name-checkbox">
    <label class="checkbox-label">C89E关键字库(480)</label>
  </div>
  <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="UFP关键字库" class="db-name-checkbox">
    <label class="checkbox-label">UFP关键字库(94)</label>
  </div>
</div>

<script>
  $(document).ready(function () {
    var db_name = []; // 初始化 db_name 数组，用于存储选中的复选框值

    // 监听复选框的状态变化
    $(".db-name-checkbox").on("change", function () {
      // 清空原有的 db_name 数组
      db_name = [];

      // 获取所有选中的复选框的值，并添加到 db_name 数组中
      $(".db-name-checkbox:checked").each(function () {
        db_name.push($(this).val());
      });

      // 在控制台输出当前选中的 db_name 值（可选，用于调试）
      console.log("选中的 db_name：", db_name);
    });

    // 监听搜索框的输入事件，发送 AJAX 请求
    $("#search").on("input", function () {
      var keyword = $(this).val();

      // 使用Ajax发送关键字和 db_name 到后端，并获取匹配的提示信息
      $.ajax({
        url: "/search/",
        method: "GET",
        data: {
          "keyword": keyword,
          "db_name": db_name // 添加 db_name 到 data 字段中
        },
        success: function (response) {
          // 清空之前的提示信息
          $("#suggestions-container").empty();

          // 使用<option>元素添加后端返回的提示信息到下拉列表中
          for (var i = 0; i < response.length; i++) {
            var option = $("<option>").text(response[i]).val(response[i]);
            $("#suggestions-container").append(option);
          }

          // 显示下拉列表
          $("#suggestions-container").show();
        },
        error: function (error) {
          console.log("请求错误: " + error);
        }
      });
    });

    // 监听下拉列表的change事件
    $("#suggestions-container").on("change", function () {
      // 获取用户选择的值
      var selectedValue = $(this).val();

      // 将选择的值填充到搜索框中
      $("#search").val(selectedValue);

      // 隐藏下拉列表
      $("#suggestions-container").hide();
    });
  });
</script>

<html>
<head>
{% csrf_token %} 
<title>搜索框自动提示</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
<br>
<br>
<form action="{% url 'keyword_search' %}" method="POST"> 
{% csrf_token %} 
<br>
<div class="checkbox-container">
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
</div>
  
<br>
<div class="select-container">
<label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
<select id="type" name="keyword_type" class="select-large-text"> 
<option value="配置">配置类</option> 
<option value="检查">检查类</option> 
<option value="获取">获取类</option> 
<option value="测试仪">测试仪类</option> 
<option value="all" selected>所有类型</option> 
</select>
</div>
<br>
<div class="search-box">
<input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
<div>
<select id="suggestions-container" style="display: none;">
</select>
</div>


    <script>
        $(document).ready(function() {
        
        $("#search").on("input", function() {
            var keyword = $(this).val();
    
            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword,
                    
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container").empty();
    
                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                        for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                    }
                });
            });
    
            // 监听下拉列表的change事件
            $("#suggestions-container").on("change", function () {
                // 获取用户选择的值
                var selectedValue = $(this).val();
    
                // 将选择的值填充到搜索框中
                $("#search").val(selectedValue);
    
                // 隐藏下拉列表
                $("#suggestions-container").hide();
            });
        });
    </script>
<button type="submit"  class="search-button">查询</button> 
</div>


<p class="normal-text">
<div class="radio-container">
<label for="yes">（选择是否查询示例库）是：</label> 
<input type="radio" id="yes" name="choice" value="yes"> 
<label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
<input type="radio" id="no" name="choice" value="no" checked>
</div>
</p>
<div class="select-container">
<label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
<select id="number" name="output_number" class="select-large-text"> 
<option value="3" selected>3</option> 
<option value="5">5</option> 
<option value="7">7</option> 
<option value="17">9</option> 
<option value="all">返回所有示例</option>
</select>
</div>
<p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>

</form> 

</html>

<script>
    $(document).ready(function() {
    
    $("#search").on("input", function() {
        var keyword = $(this).val();

        // 获取所有选中的db_name的值
        var db_names = [];
        $('input[name="db_name"]:checked').each(function() {
            db_names.push($(this).val());
        });

        // 使用Ajax发送关键字到后端，并获取匹配的提示信息
        $.ajax({
            url: "/search/",  // 这里是后端Django开发的API地址
            method: "GET",
            data: {
                "keyword": keyword,
                "db_name": db_names  // 添加db_name到请求数据中
            },
            success: function(response) {
                // 清空之前的提示信息
                $("#suggestions-container").empty();

                // 使用<option>元素添加后端返回的提示信息到下拉列表中
                for (var i = 0; i < response.length; i++) {
                    var option = $("<option>").text(response[i]).val(response[i]);
                    $("#suggestions-container").append(option);
                }

                // 显示下拉列表
                $("#suggestions-container").show();
            },
            error: function(error) {
                console.log("请求错误: " + error);
            }
        });
    });

    // 监听下拉列表的change事件
    $("#suggestions-container").on("change", function () {
        // 获取用户选择的值
        var selectedValue = $(this).val();

        // 将选择的值填充到搜索框中
        $("#search").val(selectedValue);

        // 隐藏下拉列表
        $("#suggestions-container").hide();
    });
});
</script>

$(document).ready(function() {
    
    function sendRequest() {
        // 获取所有选中的db_name的值
        var db_names = [];
        $('input[name="db_name"]:checked').each(function() {
            db_names.push($(this).val());
        });

        var keyword = $("#search").val();

        // 使用Ajax发送关键字和选中的db_name的值到后端，并获取匹配的提示信息
        $.ajax({
            url: "/search/",  // 这里是后端Django开发的API地址
            method: "GET",
            data: {
                "keyword": keyword,
                "db_name": db_names
            },
            // ...
        });
    }
    
    $("#search").on("input", sendRequest);
    $('input[name="db_name"]').on('change', sendRequest);
});

{% load static %}
{% load bootstrap3 %}
{% bootstrap_css %}
{% bootstrap_javascript %}
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="zh-CN">
    <head>
        
        <meta charset="UTF-8">
        
        {#    核心组件 bootstrap JQuey#}
        <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'jquery/jquery-3.5.1.min.js' %}"></script>
        <script src="{% static 'bootstrap/js/bootstrap.min.js' %}"></script>
        {#    bootstrap-table 插件#}
        <link href="{% static 'bootstrap-table-master/dist/bootstrap-table.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'bootstrap-table-master/dist/bootstrap-table.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/extensions/export/bootstrap-table-export.min.js' %}"></script>
        <script src="{% static 'tableExport/tableExport.min.js' %}"></script>
        <!-- 加载bootstrap-dualllistbox -->
        <link rel="stylesheet" href="{% static 'bootstrap-duallistbox/disc/bootstrap-duallistbox.css' %}" rel="external nofollow"/>
        <script src="{% static 'disc/jquery.bootstrap-duallistbox.js' %}"></script>

        <link rel="stylesheet" href="bootstrap/css/bootstrap.css">
        <link rel="stylesheet" href="bootstrap-duallistbox/disc/bootstrap-duallistbox.css">
        <script src="jquery/jquery-3.5.1.min.js"></script>
        <script src="bootstrap/js/bootstrap.min.js"></script>
  
        <script src="bootstrap-duallistbox/disc/jquery.bootstrap-duallistbox.js"></script>
        
        <link rel="stylesheet" href="https://adminlte.io/themes/AdminLTE/bower_components/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://adminlte.io/themes/AdminLTE/dist/css/AdminLTE.min.css">
        
        
{% csrf_token %} 
<title>搜索框自动提示</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
<div class="container">
<style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
<br>
<br>
<form action="{% url 'keyword_search' %}" method="POST"> 
{% csrf_token %} 
<br>
<div class="checkbox-container">
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
<div class="checkbox-item">
<input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
</div>
  
<br>
<div class="select-container">
<label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
<select id="type" name="keyword_type" class="select-large-text"> 
<option value="配置">配置类</option> 
<option value="检查">检查类</option> 
<option value="获取">获取类</option> 
<option value="测试仪">测试仪类</option> 
<option value="all" selected>所有类型</option> 
</select>
</div>
<br>
<div class="search-box">
<input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
<div>
<select id="suggestions-container" style="display: none;">
</select>
</div>


    <script>
        $(document).ready(function() {

        $("#search").on("input", function() {
            var keyword = $(this).val();
            // 获取所有选中的db_name的值
            var db_names = [];
            $('input[name="db_name"]:checked').each(function() {
                db_names.push($(this).val());
            });
            // 使用Ajax发送关键字到后端，并获取匹配的提示信息
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword,
                    "db_name": db_names
        
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container").empty();
    
                    // 使用<option>元素添加后端返回的提示信息到下拉列表中
                        for (var i = 0; i < response.length; i++) {
                        var option = $("<option>").text(response[i]).val(response[i]);
                        $("#suggestions-container").append(option);
                    }

                    // 显示下拉列表
                    $("#suggestions-container").show();
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                    }
                });
            });
    
            // 监听下拉列表的change事件
            $("#suggestions-container").on("change", function () {
                // 获取用户选择的值
                var selectedValue = $(this).val();
    
                // 将选择的值填充到搜索框中
                $("#search").val(selectedValue);
    
                // 隐藏下拉列表
                $("#suggestions-container").hide();
            });
        });
    </script>
<button type="submit"  class="search-button">查询</button> 
</div>


<p class="normal-text">
<div class="radio-container">
<label for="yes">（选择是否查询示例库）是：</label> 
<input type="radio" id="yes" name="choice" value="yes"> 
<label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
<input type="radio" id="no" name="choice" value="no" checked>
</div>
</p>
<div class="select-container">
<label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
<select id="number" name="output_number" class="select-large-text"> 
<option value="3" selected>3</option> 
<option value="5">5</option> 
<option value="7">7</option> 
<option value="17">9</option> 
<option value="all">返回所有示例</option>
</select>
</div>
<p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>

</form> 
<body>
    <table id="table"></table>
    
    </body>
</div>
</body>
<script>
    var url = 'http://10.229.191.63:8000/keyword_info';
    var columns = [
        {   field: 'peizhi',
            title: '配置类关键字',
            sortable:true //设置ID列可以排序
        }, {
            field: 'jiancha',
            title: '检查类关键字',
        }, {
            field: 'huoqu',
            title: '获取类关键字'
        }, {
            field: 'ceshiyi',
            title: '测试仪类关键字'
        },
    ];
    $("#table").bootstrapTable({
        locale: 'zh-CN',
        toolbar: '#toolbar',                //自定义工具按钮
        url: url,                           //请求后台的URL（*）
        method: 'get',                      //请求方式（*）
        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true,                   //是否显示分页（*）
        pageSize: 10,                       //每页的记录行数（*）
        pageList: [10, 20, 50, 100, 'All'], //可供选择的每页的行数（*）
        sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1,                      //初始化加载第一页，默认第一页
        search: true,                       //是否显示表格搜索
        showColumns: true,                  //是否显示所有的列
        showRefresh: true,                  //是否显示刷新按钮
        minimumCountColumns: 2,             //最少允许的列数
        height: 550,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
        columns: columns,                   //列参数
        detailView: false,                   //是否显示父子表
        sortName: 'id',
        sortable: true,
        sortOrder: 'desc',
        showExport: true,               //显示导出按钮
        exportDataType: 'basic',          //'basic':当前页的数据, 'all':全部的数据, 'selected':选中的数据
        maintainSelected :true,

        //展开行事件
        onExpandRow: function (index, row, $detail) {
            zi_table(index, row, $detail); //回调函数
        },
    });
    
    function getCookie(name) {
    	let cookieValue = null;
    	if (document.cookie && document.cookie !== '') {
        	const cookies = document.cookie.split(';');
        	for (let i = 0; i < cookies.length; i++) {
            	const cookie = cookies[i].trim();
            	// Does this cookie string begin with the name we want?
            	if (cookie.substring(0, name.length + 1) === (name + '=')) {
                	cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                	break;
            	}
        	}
    	}
    	return cookieValue;
	}
	const csrftoken = getCookie('csrftoken');

    function getInfo(){
      var rows = $('#table').bootstrapTable('getSelections');
      var html = rows[0].id + rows[1].id;
      location.href="http://10.229.191.63:8000/link_add/?id1=" + rows[0].id +"&id2=" + rows[1].id;
      
      
    }



    
    
     
    

    
      

      
      
    //定义子表函数
    function zi_table(index, row, $detail) {
        var fzr_table = $detail.html('<table></table>').find('table');
        $(fzr_table).bootstrapTable({
            url: url,
            columns: columns,
        })
    }
</script>
{% if messages %}
    
    <script>
            {% for msg in messages %}
                alert('{{ msg.message }}');
            {% endfor %}
    </script>
    {% endif %}

</html>

{% load static %}
{% load bootstrap3 %}
{% bootstrap_css %}
{% bootstrap_javascript %}
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="zh-CN">
    <head>
        
        <meta charset="UTF-8">
        
        {#    核心组件 bootstrap JQuey#}
        <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'jquery/jquery-3.5.1.min.js' %}"></script>
        <script src="{% static 'bootstrap/js/bootstrap.min.js' %}"></script>
        {#    bootstrap-table 插件#}
        <link href="{% static 'bootstrap-table-master/dist/bootstrap-table.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'bootstrap-table-master/dist/bootstrap-table.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/extensions/export/bootstrap-table-export.min.js' %}"></script>
        <script src="{% static 'tableExport/tableExport.min.js' %}"></script>
        <!-- 加载bootstrap-dualllistbox -->
        <link rel="stylesheet" href="{% static 'bootstrap-duallistbox/disc/bootstrap-duallistbox.css' %}" rel="external nofollow"/>
        <script src="{% static 'disc/jquery.bootstrap-duallistbox.js' %}"></script>

        <link rel="stylesheet" href="bootstrap/css/bootstrap.css">
        <link rel="stylesheet" href="bootstrap-duallistbox/disc/bootstrap-duallistbox.css">
        <script src="jquery/jquery-3.5.1.min.js"></script>
        <script src="bootstrap/js/bootstrap.min.js"></script>
  
        <script src="bootstrap-duallistbox/disc/jquery.bootstrap-duallistbox.js"></script>
        
        <link rel="stylesheet" href="https://adminlte.io/themes/AdminLTE/bower_components/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://adminlte.io/themes/AdminLTE/dist/css/AdminLTE.min.css">
        
        
{% csrf_token %} 
<title>搜索框自动提示</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
<div class="container">
    <style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
    <br>
    <br>
    <form action="{% url 'keyword_search' %}" method="POST"> 
    {% csrf_token %} 
    <br>
    <div class="checkbox-container">
    <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
    <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
    <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
    <div class="checkbox-item">
    <input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
    </div>
      
    <br>
    <div class="select-container">
    <label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
    <select id="type" name="keyword_type" class="select-large-text"> 
    <option value="配置">配置类</option> 
    <option value="检查">检查类</option> 
    <option value="获取">获取类</option> 
    <option value="测试仪">测试仪类</option> 
    <option value="all" selected>所有类型</option> 
    </select>
    </div>
    <br>
    <div class="search-box">
    <input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
    <div>
    <select id="suggestions-container" style="display: none;">
    </select>
    </div>
    
    
        <script>
            $(document).ready(function() {
    
            $("#search").on("input", function() {
                var keyword = $(this).val();
                // 获取所有选中的db_name的值
                var db_names = [];
                $('input[name="db_name"]:checked').each(function() {
                    db_names.push($(this).val());
                });
                // 使用Ajax发送关键字到后端，并获取匹配的提示信息
                $.ajax({
                    url: "/search/",  // 这里是后端Django开发的API地址
                    method: "GET",
                    data: {
                        "keyword": keyword,
                        "db_name": db_names
            
                    },
                    success: function(response) {
                        // 清空之前的提示信息
                        $("#suggestions-container").empty();
        
                        // 使用<option>元素添加后端返回的提示信息到下拉列表中
                            for (var i = 0; i < response.length; i++) {
                            var option = $("<option>").text(response[i]).val(response[i]);
                            $("#suggestions-container").append(option);
                        }
    
                        // 显示下拉列表
                        $("#suggestions-container").show();
                    },
                    error: function(error) {
                        console.log("请求错误: " + error);
                        }
                    });
                });
        
                // 监听下拉列表的change事件
                $("#suggestions-container").on("change", function () {
                    // 获取用户选择的值
                    var selectedValue = $(this).val();
        
                    // 将选择的值填充到搜索框中
                    $("#search").val(selectedValue);
        
                    // 隐藏下拉列表
                    $("#suggestions-container").hide();
                });
            });
        </script>
    <button type="submit"  class="search-button">查询</button> 
    </div>
    
    
    <p class="normal-text">
    <div class="radio-container">
    <label for="yes">（选择是否查询示例库）是：</label> 
    <input type="radio" id="yes" name="choice" value="yes"> 
    <label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
    <input type="radio" id="no" name="choice" value="no" checked>
    </div>
    </p>
    <div class="select-container">
    <label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
    <select id="number" name="output_number" class="select-large-text"> 
    <option value="3" selected>3</option> 
    <option value="5">5</option> 
    <option value="7">7</option> 
    <option value="17">9</option> 
    <option value="all">返回所有示例</option>
    </select>
    </div>
    <p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>
    
    </form> 
<h3 align="center"><b>常用关键字分类列表</b></h3>
<body>
    <div id="toolbar" class="btn-group">
           
        <button id="btn_draw" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-list" aria-hidden="true"></span>常用关键字说明文档列表
        </button>
        <button id="btn_checkinfo" type="button" class="btn btn-default">
          <span class="glyphicon glyphicon-list" aria-hidden="true"></span>常用关键字示例列表
      </button>
    </div>
    <table id="table"></table>
    
    </body>
</div>
</body>
<script>
    var url = 'http://10.229.191.63:8000/keyword_info';
    var columns = [
        {   field: 'peizhi',
            title: '配置类关键字',
            sortable:true //设置ID列可以排序
        }, {
            field: 'jiancha',
            title: '检查类关键字',
        }, {
            field: 'huoqu',
            title: '获取类关键字'
        }, {
            field: 'ceshiyi',
            title: '测试仪类关键字'
        },
    ];
    $("#table").bootstrapTable({
        locale: 'zh-CN',
        toolbar: '#toolbar',                //自定义工具按钮
        url: url,                           //请求后台的URL（*）
        method: 'get',                      //请求方式（*）
        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true,                   //是否显示分页（*）
        pageSize: 10,                       //每页的记录行数（*）
        pageList: [10, 20, 50, 100, 'All'], //可供选择的每页的行数（*）
        sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1,                      //初始化加载第一页，默认第一页
        search: true,                       //是否显示表格搜索
        showColumns: true,                  //是否显示所有的列
        showRefresh: true,                  //是否显示刷新按钮
        minimumCountColumns: 2,             //最少允许的列数
        height: 550,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
        columns: columns,                   //列参数
        detailView: false,                   //是否显示父子表
        sortName: 'id',
        sortable: true,
        sortOrder: 'desc',
        showExport: true,               //显示导出按钮
        exportDataType: 'basic',          //'basic':当前页的数据, 'all':全部的数据, 'selected':选中的数据
        maintainSelected :true,

        //展开行事件
        onExpandRow: function (index, row, $detail) {
            zi_table(index, row, $detail); //回调函数
        },
    });
    
    function getCookie(name) {
    	let cookieValue = null;
    	if (document.cookie && document.cookie !== '') {
        	const cookies = document.cookie.split(';');
        	for (let i = 0; i < cookies.length; i++) {
            	const cookie = cookies[i].trim();
            	// Does this cookie string begin with the name we want?
            	if (cookie.substring(0, name.length + 1) === (name + '=')) {
                	cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                	break;
            	}
        	}
    	}
    	return cookieValue;
	}
	const csrftoken = getCookie('csrftoken');

    

      
    //定义子表函数
    function zi_table(index, row, $detail) {
        var fzr_table = $detail.html('<table></table>').find('table');
        $(fzr_table).bootstrapTable({
            url: url,
            columns: columns,
        })
    }
</script>


</html>

{% load static %}
{% load bootstrap3 %}
{% bootstrap_css %}
{% bootstrap_javascript %}
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="zh-CN">
    <head>
        <meta charset="UTF-8">
        {#    核心组件 bootstrap JQuey#}
        <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'jquery/jquery-3.5.1.min.js' %}"></script>
        <script src="{% static 'bootstrap/js/bootstrap.min.js' %}"></script>
        {#    bootstrap-table 插件#}
        <link href="{% static 'bootstrap-table-master/dist/bootstrap-table.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'bootstrap-table-master/dist/bootstrap-table.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/extensions/export/bootstrap-table-export.min.js' %}"></script>
        <script src="{% static 'tableExport/tableExport.min.js' %}"></script>
        <!-- 加载bootstrap-dualllistbox -->
        <link rel="stylesheet" href="{% static 'bootstrap-duallistbox/disc/bootstrap-duallistbox.css' %}" rel="external nofollow"/>
        <script src="{% static 'disc/jquery.bootstrap-duallistbox.js' %}"></script>

        <link rel="stylesheet" href="bootstrap/css/bootstrap.css">
        <link rel="stylesheet" href="bootstrap-duallistbox/disc/bootstrap-duallistbox.css">
        <script src="jquery/jquery-3.5.1.min.js"></script>
        <script src="bootstrap/js/bootstrap.min.js"></script>
  
        <script src="bootstrap-duallistbox/disc/jquery.bootstrap-duallistbox.js"></script>
       
        {% csrf_token %} 
<title>关键字库统一查询系统</title>

</head>
   

    <body>
        <style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
        <br>
        <br>
        <form action="{% url 'keyword_search' %}" method="POST"> 
        {% csrf_token %} 
        <br>
        <div class="checkbox-container">
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
        </div>
          
        <br>
        <div class="select-container">
        <label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
        <select id="type" name="keyword_type" class="select-large-text"> 
        <option value="配置">配置类</option> 
        <option value="检查">检查类</option> 
        <option value="获取">获取类</option> 
        <option value="测试仪">测试仪类</option> 
        <option value="all" selected>所有类型</option> 
        </select>
        </div>
        <br>
        <div class="search-box">
        <input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
        <div>
        <select id="suggestions-container" style="display: none;">
        </select>
        </div>
        
        
            <script>
                $(document).ready(function() {
        
                $("#search").on("input", function() {
                    var keyword = $(this).val();
                    // 获取所有选中的db_name的值
                    var db_names = [];
                    $('input[name="db_name"]:checked').each(function() {
                        db_names.push($(this).val());
                    });
                    // 使用Ajax发送关键字到后端，并获取匹配的提示信息
                    $.ajax({
                        url: "/search/",  // 这里是后端Django开发的API地址
                        method: "GET",
                        data: {
                            "keyword": keyword,
                            "db_name": db_names
                
                        },
                        success: function(response) {
                            // 清空之前的提示信息
                            $("#suggestions-container").empty();
            
                            // 使用<option>元素添加后端返回的提示信息到下拉列表中
                                for (var i = 0; i < response.length; i++) {
                                var option = $("<option>").text(response[i]).val(response[i]);
                                $("#suggestions-container").append(option);
                            }
        
                            // 显示下拉列表
                            $("#suggestions-container").show();
                        },
                        error: function(error) {
                            console.log("请求错误: " + error);
                            }
                        });
                    });
            
                    // 监听下拉列表的change事件
                    $("#suggestions-container").on("change", function () {
                        // 获取用户选择的值
                        var selectedValue = $(this).val();
            
                        // 将选择的值填充到搜索框中
                        $("#search").val(selectedValue);
            
                        // 隐藏下拉列表
                        $("#suggestions-container").hide();
                    });
                });
            </script>
        <button type="submit"  class="search-button">查询</button> 
        </div>
        
        
        <p class="normal-text">
        <div class="radio-container">
        <label for="yes">（选择是否查询示例库）是：</label> 
        <input type="radio" id="yes" name="choice" value="yes"> 
        <label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
        <input type="radio" id="no" name="choice" value="no" checked>
        </div>
        </p>
        <div class="select-container">
        <label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
        <select id="number" name="output_number" class="select-large-text"> 
        <option value="3" selected>3</option> 
        <option value="5">5</option> 
        <option value="7">7</option> 
        <option value="17">9</option> 
        <option value="all">返回所有示例</option>
        </select>
        </div>
        <p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>
        
        </form> 
<div class="container">
    <h3 align="center"><b>常用关键字分类列表</b></h3>
    <hr/>

    <body>
        <div class="container">
            
        
            <div id="toolbar" class="btn-group">
                <button id="btn_admin" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-cloud" aria-hidden="true"></span>登录关键字统一数据库
                </button>
                <button id="btn_back" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>返回关键字查询主页
                </button>
            </div>
        
            <table id="table"></table>
        </div>
        </body>
</div>
</body>
<script type="text/javascript">
    $(document).ready(function(){ 
    $("#btn_admin").click(function(){
     location.href="http://10.229.191.63:8000/admin";
     });
    }); 
    </script>
<script type="text/javascript">
    $(document).ready(function(){ 
    $("#btn_back").click(function(){
     location.href="http://10.229.191.63:8000/keyword_search";
     });
    }); 
    </script>
<script>
    
    var url = 'http://10.229.191.63:8000/keyword_info';
    var columns = [
        {   field: 'id',
            title: '序号',
            sortable:true //设置ID列可以排序
        }, {   field: 'peizhi',
            title: '配置类关键字',
        }, {
            field: 'jiancha',
            title: '检查类关键字',
        }, {
            field: 'huoqu',
            title: '获取类关键字'
        }, {
            field: 'ceshiyi',
            title: '测试仪类关键字'
        },
    ];
    $("#table").bootstrapTable({
        locale: 'zh-CN',
        toolbar: '#toolbar',                //自定义工具按钮
        url: url,                           //请求后台的URL（*）
        method: 'get',                      //请求方式（*）
        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true,                   //是否显示分页（*）
        pageSize: 10,                       //每页的记录行数（*）
        pageList: [10, 20, 50, 100, 'All'], //可供选择的每页的行数（*）
        sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1,                      //初始化加载第一页，默认第一页
        search: true,                       //是否显示表格搜索
        showColumns: true,                  //是否显示所有的列
        showRefresh: true,                  //是否显示刷新按钮
        minimumCountColumns: 2,             //最少允许的列数
        height: 550,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
        columns: columns,                   //列参数
        detailView: false,                   //是否显示父子表
        sortName: 'id',
        sortable: true,
        // sortOrder: 'desc',
        showExport: true,               //显示导出按钮
        exportDataType: 'basic',          //'basic':当前页的数据, 'all':全部的数据, 'selected':选中的数据
        maintainSelected :true,

        //展开行事件
        onExpandRow: function (index, row, $detail) {
            zi_table(index, row, $detail); //回调函数
        },
    });
    
    //定义子表函数
    function zi_table(index, row, $detail) {
        var fzr_table = $detail.html('<table></table>').find('table');
        $(fzr_table).bootstrapTable({
            url: url,
            columns: columns,
        })
    }
</script>

{% if messages %}
    
    <script>
            {% for msg in messages %}
                alert('{{ msg.message }}');
            {% endfor %}
    </script>
    {% endif %}

</html>

var columns = [
    {   field: 'id',
        title: '序号',
        sortable:true //设置ID列可以排序
    }, {   field: 'peizhi',
        title: '配置类关键字',
        formatter: function(value, row, index) {
            return '<a href="https://www.example.com/?keyword=' + value + '">' + value + '</a>';
        }
    }, {
        field: 'jiancha',
        title: '检查类关键字',
    }, {
        field: 'huoqu',
        title: '获取类关键字'
    }, {
        field: 'ceshiyi',
        title: '测试仪类关键字'
    },
];

<template>
  <div class="search-container">
    <input class="search-input" type="text" v-model="searchQuery" placeholder="Search..." />
    <button class="search-button" @click="search">Search</button>
  </div>
</template>

<script>
export default {
  data() {
    return {
      searchQuery: ''
    }
  },
  methods: {
    search() {
      console.log(`Searching for ${this.searchQuery}`)
      // 在这里执行搜索操作...
    }
  }
}
</script>

<style scoped>
.search-container {
  display: flex;
  justify-content: center;
  padding: 20px;
}

.search-input {
  width: 200px;
  height: 35px;
  border: 1px solid #ccc;
  padding: 0 10px;
  border-radius: 5px;
}

.search-button {
  height: 35px;
  margin-left: 10px;
  background-color: #4CAF50;
  border: none;
  color: white;
  padding: 0 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 5px;
  cursor: pointer;
}

.search-button:hover {
  background-color: #45a049;
}
</style>

<div class="search-box">
    <input type="text" id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 

    <!-- 下拉菜单开始 -->
    <div id="suggestions-container" class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Suggestions
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <!-- 在这里动态插入提示 -->
        </div>
    </div>
    <!-- 下拉菜单结束 -->

    <button type="submit" class="search-button">查询</button> 
</div>

<script>
    $(document).ready(function() {
        $("#search").on("input", function() {
            var keyword = $(this).val();
            var db_names = [];
            $('input[name="db_name"]:checked').each(function() {
                db_names.push($(this).val());
            });
            
            $.ajax({
                url: "/search/",  // 这里是后端Django开发的API地址
                method: "GET",
                data: {
                    "keyword": keyword,
                    "db_name": db_names
                },
                success: function(response) {
                    // 清空之前的提示信息
                    $("#suggestions-container .dropdown-menu").empty();
                    
                    // 使用<div>元素添加后端返回的提示信息到下拉列表中
                    for (var i = 0; i < response.length; i++) {
                        var item = $("<div>").text(response[i]).addClass("dropdown-item").attr("href", "#");
                        $("#suggestions-container .dropdown-menu").append(item);
                    }
                },
                error: function(error) {
                    console.log("请求错误: " + error);
                }
            });
        });

        // 监听下拉列表的点击事件
        $("#suggestions-container").on("click", ".dropdown-item", function (e) {
            e.preventDefault();  // 阻止默认事件
            
            // 获取用户选择的值
            var selectedValue = $(this).text();
            
            // 将选择的值填充到搜索框中
            $("#search").val(selectedValue);
        });
    });
</script>

{% load static %}
{% load bootstrap3 %}
{% bootstrap_css %}
{% bootstrap_javascript %}
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html lang="zh-CN">
    <head>
        <meta charset="UTF-8">
        {#    核心组件 bootstrap JQuey#}
        <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'jquery/jquery-3.5.1.min.js' %}"></script>
        <script src="{% static 'bootstrap/js/bootstrap.min.js' %}"></script>
        {#    bootstrap-table 插件#}
        <link href="{% static 'bootstrap-table-master/dist/bootstrap-table.min.css' %}" rel="stylesheet"/>
        <script src="{% static 'bootstrap-table-master/dist/bootstrap-table.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/locale/bootstrap-table-zh-CN.min.js' %}"></script>
        <script src="{% static 'bootstrap-table-master/dist/extensions/export/bootstrap-table-export.min.js' %}"></script>
        <script src="{% static 'tableExport/tableExport.min.js' %}"></script>
        <!-- 加载bootstrap-dualllistbox -->
        <link rel="stylesheet" href="{% static 'bootstrap-duallistbox/disc/bootstrap-duallistbox.css' %}" rel="external nofollow"/>
        <script src="{% static 'disc/jquery.bootstrap-duallistbox.js' %}"></script>

        <link rel="stylesheet" href="bootstrap/css/bootstrap.css">
        <link rel="stylesheet" href="bootstrap-duallistbox/disc/bootstrap-duallistbox.css">
        <script src="jquery/jquery-3.5.1.min.js"></script>
        <script src="bootstrap/js/bootstrap.min.js"></script>
  
        <script src="bootstrap-duallistbox/disc/jquery.bootstrap-duallistbox.js"></script>
       
        {% csrf_token %} 
<title>关键字库统一查询系统</title>

</head>
   

    <body>
        <style> .search-container { display: flex; justify-content: center; align-items: center; } .search-box { display: flex; align-items: center; border: 1px solid #ccc; border-radius: 8px; padding: 8px; width: 50%; margin: 0 auto; margin-top: auto; margin-bottom: auto;  outline: none;text-shadow: none;box-shadow: 0px 0px 2px #005efe inset; }  .search-input {flex: 1; border: 0; padding: 0; font-size: 16px; outline: none;  }  .search-button { background-color: #4285f4; color: #fff; border: none; border-radius: 4px; padding: 8px; margin-left: 8px; cursor: pointer; } .checkbox-container {  display: flex; align-items: center; justify-content: center; flex-wrap: wrap; } .checkbox-label { margin-right: 8px; display: flex; align-items: center; } .checkbox-item { display: flex; align-items: center; margin-right: 16px; }  .radio-container { display: flex; align-items: center; justify-content: center;  } .radio-label {  margin-right: 8px; display: flex; align-items: center; } .select-container { display: flex; align-items: center; justify-content: center; } .select-label { margin-right: 8px; display: flex; align-items: center;  } .select-large-text {font-size: 16px;}</style>
        <br>
        <form action="{% url 'keyword_search' %}" method="POST"> 
        {% csrf_token %} 
        <p style="text-align: center;"> <a href="http://10.229.191.63:8000/admin" style="color: blue; text-decoration: none;">（数据库信息：关键字库中包含572个RF关键字robot文件，总计7048个关键字，示例库中包含3101个RF自动化测试用例robot文件）</a></p>
        <div class="checkbox-container">
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="中台关键字库" checked > <label class="checkbox-label">中台关键字库(5168)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="9K关键字库" ><label class="checkbox-label">9K关键字库(1261)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="C89E关键字库" ><label class="checkbox-label">C89E关键字库(480)</label></input></div>
        <div class="checkbox-item">
        <input type="checkbox" name="db_name" value="UFP关键字库" ><label class="checkbox-label">UFP关键字库(94)</label></input></div>
        </div>
          
        <br>
        <div class="select-container">
        <label class="select-label" label for="number">请选择所查询关键字的类型：</label> 
        <select id="type" name="keyword_type" class="select-large-text"> 
        <option value="配置">配置类</option> 
        <option value="检查">检查类</option> 
        <option value="获取">获取类</option> 
        <option value="测试仪">测试仪类</option> 
        <option value="all" selected>所有类型</option> 
        </select>
        </div>
        <br>
        <div class="search-box">
        <input type="text"  id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
        <div>
        <select id="suggestions-container" style="display: none;">
        </select>
        </div>
        
        
            <script>
                $(document).ready(function() {
        
                $("#search").on("input", function() {
                    var keyword = $(this).val();
                    // 获取所有选中的db_name的值
                    var db_names = [];
                    $('input[name="db_name"]:checked').each(function() {
                        db_names.push($(this).val());
                    });
                    // 使用Ajax发送关键字到后端，并获取匹配的提示信息
                    $.ajax({
                        url: "/search/",  // 这里是后端Django开发的API地址
                        method: "GET",
                        data: {
                            "keyword": keyword,
                            "db_name": db_names
                
                        },
                        success: function(response) {
                            // 清空之前的提示信息
                            $("#suggestions-container").empty();
            
                            // 使用<option>元素添加后端返回的提示信息到下拉列表中
                                for (var i = 0; i < response.length; i++) {
                                var option = $("<option>").text(response[i]).val(response[i]);
                                $("#suggestions-container").append(option);
                            }
        
                            // 显示下拉列表
                            $("#suggestions-container").show();
                        },
                        error: function(error) {
                            console.log("请求错误: " + error);
                            }
                        });
                    });
            
                    // 监听下拉列表的change事件
                    $("#suggestions-container").on("change", function () {
                        // 获取用户选择的值
                        var selectedValue = $(this).val();
            
                        // 将选择的值填充到搜索框中
                        $("#search").val(selectedValue);
            
                        // 隐藏下拉列表
                        $("#suggestions-container").hide();
                    });
                });
            </script>
        <button type="submit"  class="search-button">查询</button> 
        </div>
        
        
        <p class="normal-text">
        <div class="radio-container">
        <label for="yes">（选择是否查询示例库）是：</label> 
        <input type="radio" id="yes" name="choice" value="yes"> 
        <label for="no">&nbsp;&nbsp;&nbsp;&nbsp;否：</label> 
        <input type="radio" id="no" name="choice" value="no" checked>
        </div>
        </p>
        <div class="select-container">
        <label class="select-label" label for="number">如果查询示例库，请选择返回的示例的个数：</label> 
        <select id="number" name="output_number" class="select-large-text"> 
        <option value="3" selected>3</option> 
        <option value="5">5</option> 
        <option value="7">7</option> 
        <option value="17">9</option> 
        <option value="all">返回所有示例</option>
        </select>
        </div>
       
        </form> 
<div class="container">
    <h3 align="center"><b>常用TOP100关键字分类列表</b></h3>
    <hr/>

    <body>
        <div class="container">
            
        
            <div id="toolbar" class="btn-group">
                <button id="btn_admin" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-cloud" aria-hidden="true"></span>登录关键字统一数据库
                </button>
                <button id="btn_back" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>返回关键字查询主页
                </button>
            </div>
        
            <table id="table"></table>
        </div>
        </body>
    

</div>

</body>
<script type="text/javascript">
    $(document).ready(function(){ 
    $("#btn_admin").click(function(){
     location.href="http://10.229.191.63:8000/admin";
     });
    }); 
    </script>
<script type="text/javascript">
    $(document).ready(function(){ 
    $("#btn_back").click(function(){
     location.href="http://10.229.191.63:8000/keyword_search";
     });
    }); 
    </script>
<script>
    
    var url = 'http://10.229.191.63:8000/keyword_info';
    var columns = [
        {   field: 'id',
            title: '序号',
            sortable:true //设置ID列可以排序
        }, {   field: 'peizhi',
            title: '配置类关键字',
            formatter: function(value, row, index) {
            return '<a href="http://10.229.191.63:8000/doc?keyword=' + value + '">' + value + '</a>';
        }
        }, {
            field: 'jiancha',
            title: '检查类关键字',
            formatter: function(value, row, index) {
            return '<a href="http://10.229.191.63:8000/doc?keyword=' + value + '">' + value + '</a>';
            }
        }, {
            field: 'huoqu',
            title: '获取类关键字',
            formatter: function(value, row, index) {
            return '<a href="http://10.229.191.63:8000/doc?keyword=' + value + '">' + value + '</a>';
        }
            
        }, {
            field: 'ceshiyi',
            title: '测试仪类关键字',
            formatter: function(value, row, index) {
            return '<a href="http://10.229.191.63:8000/doc?keyword=' + value + '">' + value + '</a>';
        }
        },
    ];
    $("#table").bootstrapTable({
        locale: 'zh-CN',
        toolbar: '#toolbar',                //自定义工具按钮
        url: url,                           //请求后台的URL（*）
        method: 'get',                      //请求方式（*）
        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
        pagination: true,                   //是否显示分页（*）
        pageSize: 10,                       //每页的记录行数（*）
        pageList: [10, 20, 50, 100, 'All'], //可供选择的每页的行数（*）
        sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
        pageNumber: 1,                      //初始化加载第一页，默认第一页
        search: true,                       //是否显示表格搜索
        showColumns: true,                  //是否显示所有的列
        showRefresh: true,                  //是否显示刷新按钮
        minimumCountColumns: 2,             //最少允许的列数
        height: 650,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
        showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
        columns: columns,                   //列参数
        detailView: false,                   //是否显示父子表
        sortName: 'id',
        sortable: true,
        // sortOrder: 'desc',
        showExport: true,               //显示导出按钮
        exportDataType: 'basic',          //'basic':当前页的数据, 'all':全部的数据, 'selected':选中的数据
        maintainSelected :true,

        //展开行事件
        onExpandRow: function (index, row, $detail) {
            zi_table(index, row, $detail); //回调函数
        },
    });
    
    

    


    
    
     
    

    
      

      
      
    //定义子表函数
    function zi_table(index, row, $detail) {
        var fzr_table = $detail.html('<table></table>').find('table');
        $(fzr_table).bootstrapTable({
            url: url,
            columns: columns,
        })
    }
</script>

{% if messages %}
    
    <script>
            {% for msg in messages %}
                alert('{{ msg.message }}');
            {% endfor %}
    </script>
    {% endif %}


    <template>
        <div class="search-container">
          <input class="search-input" type="text" v-model="searchQuery" placeholder="Search..." />
          <button class="search-button" @click="search">Search</button>
        </div>
      </template>
      
      <script>
      export default {
        data() {
          return {
            searchQuery: ''
          }
        },
        methods: {
          search() {
            console.log(`Searching for ${this.searchQuery}`)
            // 在这里执行搜索操作...
          }
        }
      }
      </script>
      
      <style scoped>
      .search-container {
        display: flex;
        justify-content: center;
        padding: 20px;
      }
      
      .search-input {
        width: 200px;
        height: 35px;
        border: 1px solid #ccc;
        padding: 0 10px;
        border-radius: 5px;
      }
      
      .search-button {
        height: 35px;
        margin-left: 10px;
        background-color: #4CAF50;
        border: none;
        color: white;
        padding: 0 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
      }
      
      .search-button:hover {
        background-color: #45a049;
      }
      </style>
</html>

<!-- 使用 flex container 包裹搜索框和下拉菜单 -->
<div class="flex-container">
    <div class="search-box">
        <input type="text" id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
        <button type="submit" class="search-button">查询</button> 
    </div>

    <!-- 下拉菜单开始 -->
    <div id="suggestions-container" class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Suggestions
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <!-- 在这里动态插入提示 -->
        </div>
    </div>
    <!-- 下拉菜单结束 -->
</div>

<!-- CSS 部分 -->
<style>
    .flex-container {
        display: flex;
        flex-direction: column;
        align-items: flex-start; 
    }
</style>

<script>
    // ... 同上 JavaScript 代码
</script>

<div class="search-container">
    <div class="search-box">
        <input type="text" id="search" name="keyword" placeholder="请输入要查询的关键字所包含的内容" class="search-input"> 
        <button type="submit" class="search-button">查询</button> 
    </div>
</div>

<!-- 下拉菜单开始，直接设置样式 -->
<select id="suggestions-container" style="display: none; width: 50%; margin: 0 auto;">
</select>
<!-- 下拉菜单结束 -->

<script>
    // ... 同上 JavaScript 代码
</script>

<div style="display: flex; justify-content: center;">
    <select id="suggestions-container" style="display: none; width: 50%;">
    </select>
</div>
